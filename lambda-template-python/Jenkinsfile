#!groovy
import groovy.json.JsonOutput
import groovy.transform.Field

@Field def configModule
@Field def configLoader
@Field def jenkins_credential_id
@Field def lambda_build_uri_dev
@Field def lambda_build_uri

node {

loadConfigModule(params.config_module_url)
jenkins_credential_id = configLoader.JENKINS.JENKINS_CREDENTIAL_ID
lambda_build_uri = configLoader.LAMBDA.LAMBDA_BUILD_URI
lambda_build_uri_dev = configLoader.LAMBDA.LAMBDA_BUILD_URI_DEV

withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId: jenkins_credential_id, passwordVariable: 'PWD',
usernameVariable: 'UNAME']]){

   echo "Build triggered via branch::${env.BRANCH_NAME}"
   echo "params : $params"

   def build_job = lambda_build_uri_dev
    if ( env.BRANCH_NAME == 'master') {
      build_job = lambda_build_uri
    }
   def var_job_url = JenkinsLocationConfiguration.get().getUrl() + build_job

    sh "curl -X GET -k -v -u \"$UNAME:$PWD\"  \"" + var_job_url + "&service_name={service_name}&domain={domain}&scm_branch=${env.BRANCH_NAME}\""
}

}

/*
* Load environment variables from build module
*/
def loadConfigModule(buildModuleUrl){
	echo "loading env variables, checking repos..."

	dir('config-loader') {
		checkout([$class: 'GitSCM', branches: [
			[name: '*/master']
		], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [
			[credentialsId: params.config_module_credential_id, url: buildModuleUrl]
		]])

		echo "loading installer variables..."

		def resultJsonString = readFile("jazz-installer-vars.json")
		configModule = load "config-loader.groovy"
		configLoader = configModule.initialize(resultJsonString)
		echo "finished loading env module"
	}
}
